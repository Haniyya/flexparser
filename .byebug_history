exit
p_xml.propagating_namespaces.keys.map { |ns| ns.gsub('xmlns:', '') }
p_xml.propagating_namespaces.keys.map { |ns| ns.tr('xmlns:', '') }
p_xml.propagating_namespaces.keys.map { |ns| ns.truncate('xmlns:', '') }
p_xml.propagating_namespaces.keys.map { |ns| ns.truncate('xmlns:', '')
p_xml.propagating_namespaces.keys
p_xml.propagating_namespaces
tag_parser.send :namespace_available?, tag_parser.xpaths.first, p_xml
p_xml = Fragment.new pref_xml
tag_parser.send :namespace_available?, tag_parser.xpaths.first, p_xml
tag_parser = pref_parser.parsers.first
exit
next
exit
Regexp.union p_xml.propagating_namespaces.keys
Regexp.union p_xml.namespaces.keys
tag_parser.send :namespace_available?, tag_parser.xpaths.first, p_xml
tag_parser.send :namespace_available?, p_xml, tag_parser.xpaths.first
tag_parser.send :namespace_available?(p_xml, tag_parser.xpaths.first)
p_xml = Fragment.new pref_xml
pref_xml
tag_parser = pref_parser.parsers.first
pref_parser.parsers.first.xpaths.first =~ /\w+:\w+/
pref_parser.parsers.first.xpaths
pref_parser.parsers.first.paths
pref_parser.parsers.first.send :valid_paths, Fragment.new(pref_xml)
pref_parser.parsers.first
pref_parser.parsers
pref_parser
pref_parser.parse pref_xml
pref_parser.tags
pref_parser
exit
p_feed
exit
p_feed
exit
next
exit
d_xml.respond_to :collect_namespaces
d_xml.propagating_namespaces
d_xml.collect_namespaces
d_xml.namespaces
d_xml
d_xml = Fragment.new pref_xml
Fragment.new pref_xml
Fragment.new _
pref_xml
exit
pref_parser.parsers.first.send :valid_paths, xml_p
pref_parser.parsers.first
pref_parser.parsers
pref_parser.tags
pref_parser
frag.send :propagating_namespaces
frag.send :propagated_namespaces
frag.namespaces
frag = Xtractor::Fragment.new pref_xml
xml_p.collect_namespaces
xml_p.namespaces
xml_p = Nokogiri::XML(pref_xml)
p_feed
p_f
exit
p_feed
doc.collect_namespaces
doc.namespaces
doc.url
doc
doc.xpath
doc.xpath './xmlns:inventory', doc.collect_namespaces
doc.xpath './xmlns:inventory'
doc.xpath './inventory:xmlns'
doc.xpath './inventory'
doc.collect_namespaces
doc.namespaces
doc = Nokogiri::XML(xml)
xml
feed.send :doc
feed
feed.parts.inventory
feed.parts
feed.parst
feed
